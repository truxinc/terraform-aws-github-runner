name: Release build
on:
  push:
    branches:
      - main
      - v1
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: 20
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Build dist
        working-directory: lambdas
        run: yarn install --frozen-lockfile && yarn run test && yarn dist
      - name: Get installation token
        uses: actions/create-github-app-token@5d869da34e18e7287c1daad50e0b8ea0f506ce69 # v1.11.0
        id: token
        with:
          app-id: ${{ secrets.FOREST_RELEASER_APP_ID }}
          private-key: ${{ secrets.FOREST_RELEASER_APP_PRIVATE_KEY }}
      - name: Extract branch name
        id: branch
        shell: bash
        run: echo "name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      - name: Release
        id: release
        uses: google-github-actions/release-please-action@e4dc86ba9405554aeba3c6bb2d169500e7d3b4ee # v4.1.1
        with:
          target-branch: ${{ steps.branch.outputs.name }}
          release-type: terraform-module
          token: ${{ steps.token.outputs.token }}
      - name: Upload Release Asset
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for f in $(find . -name '*.zip'); do
            gh release upload ${{ steps.release.outputs.tag_name }} $f
          done
